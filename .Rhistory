map(\(x) read_xlsx(path=paste0(file_path,file_name),
sheet = x,
col_types = "text",
trim_ws = T,
skip=2) |>
clean_names()
) |>
list_rbind(names_to = "tura")
file_path = "D:/OneDrive - Uniwersytet Jagielloński/ZDM/Zajęcia zintegrowane z nauk przedklinicznych/"
file_name = "Grafik zajęcia zintegrowane - wersja 15.01.2024.xlsx"
file_import= excel_sheets(paste0(file_path,file_name)) |>
set_names() |>
map(\(x) read_xlsx(path=paste0(file_path,file_name),
sheet = x,
col_types = "text",
trim_ws = T,
skip=2) |>
clean_names()
) |>
list_rbind(names_to = "tura")
library(tidyverse)
library(readxl)
library(janitor)
file_path = "D:/OneDrive - Uniwersytet Jagielloński/ZDM/Zajęcia zintegrowane z nauk przedklinicznych/"
file_name = "Grafik zajęcia zintegrowane - wersja 15.01.2024.xlsx"
file_import= excel_sheets(paste0(file_path,file_name)) |>
set_names() |>
map(\(x) read_xlsx(path=paste0(file_path,file_name),
sheet = x,
col_types = "text",
trim_ws = T,
skip=2) |>
clean_names()
) |>
list_rbind(names_to = "tura")
file_etl = file_import |>
fill(grupa,termin) |>
mutate(godziny= str_extract(termin,"(?<=\\s)\\S+")) |>
rename(zajecia_1A=przypadek_1,
zajecia_1B=x5,
zajecia_1C=x6,
zajecia_2A=przypadek_2,
zajecia_2B=x8,
zajecia_2C=x9) |>
pivot_longer(
cols = starts_with("zajecia"),
names_to = "zajecia",
values_to = "value",
values_transform = as.character) |>
pivot_wider(
names_from = x3,
values_from = value) |>
fill(`Prowadzący/a`) |>
mutate(termin_zmieniony =  str_detect(Data,"\\s+") ,
data2 = if_else(termin_zmieniony==T,str_extract(Data,"\\S+(?=\\s)"),Data),
godziny_final = if_else(termin_zmieniony==T,str_extract(Data,"\\S+$"),godziny)) |>
mutate(data2 = case_when(
data2=="29.lut"~"2024-02-29",
TRUE ~ data2),
data_final = convert_to_date(data2,character_fun = ymd,string_conversion_failure = "warning"),
data_final = if_else(!is.na(data_final),data_final,
convert_to_date(data2,character_fun = dmy,string_conversion_failure = "warning")),
data_final = make_date(2024,month(data_final),day(data_final)),
dzien_tygodnia = wday(data_final,label=T,abbr=F)
) |>
mutate(zajecia = str_extract(zajecia,"(?<=_)\\w+"),
przypadek = as.integer(str_sub(zajecia,0,1)),
godzina_start = hm(str_extract(godziny_final,".+(?=-)")),
godzina_koniec = hm(str_extract(godziny_final,"(?<=-).+")))
file_result = file_etl |>
ungroup()|>
arrange(data_final,godzina_start)|>
select(tura,
grupa,
przypadek,
zajecia,
Sala,
Prowadzacy = `Prowadzący/a`,
dzien_tygodnia,
data_final,
godziny_final,
termin_zmieniony,
termin_domyslny = termin,
godzina_domyslny =godziny)
file_vr = file_result |>
filter(str_detect(zajecia,"A"))
file_vr = file_result |>
filter(str_detect(zajecia,"A")) |>
select(tura, grupa, Prowadzacy, dzien_tygodnia,data_final,godziny_final)
View(file_vr)
write_excel_csv2(file_result,
paste0(file_path,"harmonogram.csv"))
write_excel_csv2(file_vr,
paste0(file_path,"harmonogram_VR.csv"))
file_vr = file_result |>
filter(str_detect(zajecia,"A")) |>
select(tura, grupa,zajecia, Prowadzacy, dzien_tygodnia,data_final,godziny_final)
write_excel_csv2(file_vr,
paste0(file_path,"harmonogram_VR.csv"))
library(tidyverse)
library(arrow)
library(readxl)
library(here)
library(knitr)
library(lubridate)
library(janitor)
library(naniar)
i_am('scripts/0_get_data.qmd')
file_paths
file_paths = paste0("/data/raw/",basename(urls))
urls = unique(
c(
"https://ela.nauka.gov.pl/dataExperts/doctors/doctors-institution-general-dictionary.xlsx",
"https://ela.nauka.gov.pl/dataExperts/graduates/graduates-major-data.csv",
"https://ela.nauka.gov.pl/dataExperts/graduates/graduates-institution-dictionary.xlsx",
"https://ela.nauka.gov.pl/dataExperts/graduates/graduates-institution-data.csv",
"https://ela.nauka.gov.pl/dataExperts/graduates/graduates-national-dictionary.xlsx",
"https://ela.nauka.gov.pl/dataExperts/graduates/graduates-national-data.csv",
"https://ela.nauka.gov.pl/dataExperts/doctors/doctors-institution-general-dictionary.xlsx",
"https://ela.nauka.gov.pl/dataExperts/doctors/doctors-institution-general-data.csv",
"https://ela.nauka.gov.pl/dataExperts/doctors/doctors-institution-discipline-dictionary.xlsx",
"https://ela.nauka.gov.pl/dataExperts/doctors/doctors-institution-discipline-data.csv",
"https://ela.nauka.gov.pl/dataExperts/doctors/doctors-national-general-dictionary.xlsx",
"https://ela.nauka.gov.pl/dataExperts/doctors/doctors-national-general-data.csv",
"https://ela.nauka.gov.pl/dataExperts/doctors/doctors-national-discipline-dictionary.xlsx",
"https://ela.nauka.gov.pl/dataExperts/doctors/doctors-national-discipline-data.csv",
"https://ela.nauka.gov.pl/dataExperts/phd_students/phd_students-institution-general-data.csv",
"https://ela.nauka.gov.pl/dataExperts/phd_students/phd_students-institution-discipline-data.csv",
"https://ela.nauka.gov.pl/dataExperts/phd_students/phd_students-national-general-data.csv",
"https://ela.nauka.gov.pl/dataExperts/phd_students/phd_students-national-discipline-data.csv",
"https://ela.nauka.gov.pl/dataExperts/students/students-major-dictionary.xlsx",
"https://ela.nauka.gov.pl/dataExperts/students/students-major-data.csv",
"https://ela.nauka.gov.pl/dataExperts/students/students-institution-dictionary.xlsx",
"https://ela.nauka.gov.pl/dataExperts/students/students-institution-data.csv",
"https://ela.nauka.gov.pl/dataExperts/students/students-national-dictionary.xlsx",
"https://ela.nauka.gov.pl/dataExperts/students/students-national-data.csv"
))
file_paths = paste0("/data/raw/",basename(urls))
file_paths
str_ends(file_paths,".xlsx")
?str_ends
file_paths[str_ends(file_paths,".xlsx")]
dictionairies = file_paths[str_ends(file_paths,"dictionary.xlsx")]
dictionairies_paths = file_paths[str_ends(file_paths,"dictionary.xlsx")]
dictionairy_paths = file_paths[str_ends(file_paths,"dictionary.xlsx")]
x = read_excel(here(dictionairy_paths[1]))
file_paths = paste0("data/raw/",basename(urls))
today()
file_paths = paste0("data/raw/",today(),"-",basename(urls))
file_paths = paste0("data/raw/",today(),"-",basename(urls))
file_paths
urls = unique(
c(
"https://ela.nauka.gov.pl/dataExperts/doctors/doctors-institution-general-dictionary.xlsx",
"https://ela.nauka.gov.pl/dataExperts/graduates/graduates-major-data.csv",
"https://ela.nauka.gov.pl/dataExperts/graduates/graduates-institution-dictionary.xlsx",
"https://ela.nauka.gov.pl/dataExperts/graduates/graduates-institution-data.csv",
"https://ela.nauka.gov.pl/dataExperts/graduates/graduates-national-dictionary.xlsx",
"https://ela.nauka.gov.pl/dataExperts/graduates/graduates-national-data.csv",
"https://ela.nauka.gov.pl/dataExperts/doctors/doctors-institution-general-dictionary.xlsx",
"https://ela.nauka.gov.pl/dataExperts/doctors/doctors-institution-general-data.csv",
"https://ela.nauka.gov.pl/dataExperts/doctors/doctors-institution-discipline-dictionary.xlsx",
"https://ela.nauka.gov.pl/dataExperts/doctors/doctors-institution-discipline-data.csv",
"https://ela.nauka.gov.pl/dataExperts/doctors/doctors-national-general-dictionary.xlsx",
"https://ela.nauka.gov.pl/dataExperts/doctors/doctors-national-general-data.csv",
"https://ela.nauka.gov.pl/dataExperts/doctors/doctors-national-discipline-dictionary.xlsx",
"https://ela.nauka.gov.pl/dataExperts/doctors/doctors-national-discipline-data.csv",
"https://ela.nauka.gov.pl/dataExperts/phd_students/phd_students-institution-general-data.csv",
"https://ela.nauka.gov.pl/dataExperts/phd_students/phd_students-institution-discipline-data.csv",
"https://ela.nauka.gov.pl/dataExperts/phd_students/phd_students-national-general-data.csv",
"https://ela.nauka.gov.pl/dataExperts/phd_students/phd_students-national-discipline-data.csv",
"https://ela.nauka.gov.pl/dataExperts/students/students-major-dictionary.xlsx",
"https://ela.nauka.gov.pl/dataExperts/students/students-major-data.csv",
"https://ela.nauka.gov.pl/dataExperts/students/students-institution-dictionary.xlsx",
"https://ela.nauka.gov.pl/dataExperts/students/students-institution-data.csv",
"https://ela.nauka.gov.pl/dataExperts/students/students-national-dictionary.xlsx",
"https://ela.nauka.gov.pl/dataExperts/students/students-national-data.csv"
))
file_paths = paste0("data/raw/",today(),"-",basename(urls))
# download files
walk(urls,\(x) download.file(x,here(file_paths)))
walk2(urls, file_paths,\(u,p) download.file(u,here(p)))
file_paths
walk2(urls, file_paths,\(u,p) download.file(u,here(p)))
?url
library(curl)
install.packages("curl")
library(curl)
?curl_download
?multi_download
##walk2(urls, file_paths,\(u,p) download.file(u,here(p)))
multi_download(urls=urls,destfiles = file_paths)
##walk2(urls, file_paths,\(u,p) download.file(u,here(p)))
multi_download(urls=urls,destfiles = file_paths, resume=T)
##walk2(urls, file_paths,\(u,p) download.file(u,here(p)))
multi_download(urls=urls,destfiles = NULL, resume=T)
library(tidyverse)
library(arrow)
library(readxl)
library(here)
library(knitr)
library(lubridate)
library(janitor)
#library(curl)
i_am('scripts/0_get_data.qmd')
walk2(urls, file_paths,\(u,p) download.file(u,here(p)))
rm(list=ls())
library(tidyverse)
library(arrow)
library(readxl)
library(here)
library(knitr)
library(lubridate)
library(janitor)
#library(curl)
i_am('scripts/0_get_data.qmd')
file_paths = paste0("data/raw/",today(),"-",basename(urls))
urls = unique(
c(
"https://ela.nauka.gov.pl/dataExperts/doctors/doctors-institution-general-dictionary.xlsx",
"https://ela.nauka.gov.pl/dataExperts/graduates/graduates-major-data.csv",
"https://ela.nauka.gov.pl/dataExperts/graduates/graduates-institution-dictionary.xlsx",
"https://ela.nauka.gov.pl/dataExperts/graduates/graduates-institution-data.csv",
"https://ela.nauka.gov.pl/dataExperts/graduates/graduates-national-dictionary.xlsx",
"https://ela.nauka.gov.pl/dataExperts/graduates/graduates-national-data.csv",
"https://ela.nauka.gov.pl/dataExperts/doctors/doctors-institution-general-dictionary.xlsx",
"https://ela.nauka.gov.pl/dataExperts/doctors/doctors-institution-general-data.csv",
"https://ela.nauka.gov.pl/dataExperts/doctors/doctors-institution-discipline-dictionary.xlsx",
"https://ela.nauka.gov.pl/dataExperts/doctors/doctors-institution-discipline-data.csv",
"https://ela.nauka.gov.pl/dataExperts/doctors/doctors-national-general-dictionary.xlsx",
"https://ela.nauka.gov.pl/dataExperts/doctors/doctors-national-general-data.csv",
"https://ela.nauka.gov.pl/dataExperts/doctors/doctors-national-discipline-dictionary.xlsx",
"https://ela.nauka.gov.pl/dataExperts/doctors/doctors-national-discipline-data.csv",
"https://ela.nauka.gov.pl/dataExperts/phd_students/phd_students-institution-general-data.csv",
"https://ela.nauka.gov.pl/dataExperts/phd_students/phd_students-institution-discipline-data.csv",
"https://ela.nauka.gov.pl/dataExperts/phd_students/phd_students-national-general-data.csv",
"https://ela.nauka.gov.pl/dataExperts/phd_students/phd_students-national-discipline-data.csv",
"https://ela.nauka.gov.pl/dataExperts/students/students-major-dictionary.xlsx",
"https://ela.nauka.gov.pl/dataExperts/students/students-major-data.csv",
"https://ela.nauka.gov.pl/dataExperts/students/students-institution-dictionary.xlsx",
"https://ela.nauka.gov.pl/dataExperts/students/students-institution-data.csv",
"https://ela.nauka.gov.pl/dataExperts/students/students-national-dictionary.xlsx",
"https://ela.nauka.gov.pl/dataExperts/students/students-national-data.csv"
))
file_paths = paste0("data/raw/",today(),"-",basename(urls))
library(tidyverse)
library(arrow)
library(readxl)
library(here)
library(knitr)
library(lubridate)
library(janitor)
library(curl)
i_am('scripts/0_get_data.qmd')
multi_download(urls=urls,destfiles = file_paths, resume=T)
multi_download(urls=urls,destfiles = here(file_paths), resume=T)
#walk2(urls, file_paths,\(u,p) download.file(u,here(p)))
multi_download(urls=urls,destfiles = here(file_paths), resume=T)
dictionairy_paths = file_paths[str_ends(file_paths,"dictionary.xlsx")]
data_paths = file_paths[str_ends(file_paths,"data.csv")]
dictionairy_paths
x = read_excel(here(dictionairy_paths[1]))
?open_csv_dataset
?open_dataset
data_paths[1]
data_paths
csv1 = open_dataset(
sources=here(data_paths[2]),
format = "csv")
?open_csv_dataset
csv1 = open_delim_dataset(
sources=here(data_paths[2]),
delim = ";"
)
View(x)
data_paths[2]
csv1
csv1 |>str()
csv1 |>glipmse()
csv1 |>glimpse()
csv1 = open_delim_dataset(
sources=here(data_paths[2]),
delim = ";",
convert_potions = csv_convert_options(decimal_point=",")
)
csv1 = open_delim_dataset(
sources=here(data_paths[2]),
delim = ";",
convert_options = csv_convert_options(decimal_point=",")
)
csv1
csv1 |>glimpse()
data_paths[2]
csv1
csv1|>group_by(1)
??group_by
csv1|>group_by(1) |>n()
csv1|>group_by(1) |> summarise(n=n())
csv1|>group_by(1) |> summarise(n=n()) |>collect()
colnames(csv1)
colnames(csv1)
colnames(csv1)
?group_by_at
csv1|>group_by(pick(1)) |> summarise(n=n()) |>collect()
csv1 |>glimpse()
csv1|>group_by(U_ROKDYP) |> summarise(n=n()) |>collect()
csv1|>group_by(across(1)) |> summarise(n=n()) |>collect()
?write_dataset
csv1|>
group_by(across(1))|>
write_dataset(path = here("data/raw"),
format="parquet")
csv1|>
write_dataset(path = here("data/raw/pq"),
format="parquet")
data_paths[2]
csv1|>
group_by(across(1))|>
write_dataset(path = here("data/raw/pq2"),
format="parquet")
tibble(
files=list.files(here("data/raw"))
)
?file_path
?file.path
tibble(
files=list.files(here("data/raw")),
size_MB = file.size(file.path(here("data/raw"),files))/1024^2
)
tibble(
files=list.files(here("data/raw")),
size_MB = file.size(file.path(here("data/raw"),files))/1024^2
) |>arrange(desc(size_MB))
options(scipen = 999)
tibble(
files=list.files(here("data/raw")),
size_MB = file.size(file.path(here("data/raw"),files))/1024^2
) |>arrange(desc(size_MB))
?list.files
tibble(
files=list.files(here("data/raw"),pattern = ".csv"),
size_MB = file.size(file.path(here("data/raw"),files))/1024^2
) |>arrange(desc(size_MB))
?read_parquet
data_paths
?write_csv_dataset
?read_parquet
csv1 = open_delim_dataset(
sources=here(data_paths[2]),
delim = ";",
convert_options = csv_convert_options(decimal_point=",")
)
csv1|>
group_by(across(1))|>
write_dataset(path = here("data/raw/pq2"),
format="parquet")
test= read_parquet(here("data/raw/pq2"))
test= read_parquet(here("data/raw/pq2/"))
test= read_parquet(here("data/raw/pq2/part-0"))
test= read_parquet(here("data/raw/pq2/part-0"))
test= read_parquet(here("data/raw/pq2/part-0.parquet"))
here("data/raw/pq2/part-0.parquet")
test_pq = open_dataset(here("data/raw/pq2"))
test_pq|>glipmse()
test_pq|>glimpse()
test = read_parquet(test_pq)
read_parquet(here("data/raw/pq2/U_ROKDYP=2016/part-0.parquet"))
test2=read_parquet(here("data/raw/pq2/U_ROKDYP=2016/part-0.parquet"))
df_1 = as_tibble(test_pq)
data_paths
basename(urls)
basename(data_paths)
basename(str_sub(data_paths),0,-4)
pq_names = str_sub(basename(data_paths),0,-4)
pq_names
pq_names = str_sub(basename(data_paths),0,-5)
pq_names
pq_names = str_sub(basename(data_paths),11,-5)
pq_names
pq_names = str_sub(basename(data_paths),12,-5)
pq_names
file_names = str_sub(basename(data_paths),12,-5)
data_paths
pq_path = here("data/pq_data/")
pq_path = "data/pq_data/"
csv1 = open_delim_dataset(
sources=here(data_paths[2]),
delim = ";",
convert_options = csv_convert_options(decimal_point=",")
)|>
group_by(across(1))|>
write_dataset(path = here("data/raw/pq2"),
format="parquet")
walk2(data_paths,file_names,\(pts,nms)
open_delim_dataset(
sources=here(pts),
delim = ";",
convert_options = csv_convert_options(decimal_point=","))|>
group_by(across(1)) |>
write_dataset(
paste0(here(pq_path),nms),
format = "parquet")
)
data_paths
walk2(data_paths,file_names,\(pts,nms)
open_delim_dataset(
sources=here(pts),
delim = ";",
convert_options = csv_convert_options(decimal_point=","))|>
group_by(across(1)) |>
write_dataset(
paste0(here(pq_path),nms),
format = "parquet")
)
csv1 = open_delim_dataset(
sources=here(data_paths[1]),
delim = ";",
convert_options = csv_convert_options(decimal_point=",")
)
csv1
csv1 |> glipmse()
csv1 |> glimpse()
csv1
?open_dataset
?open_delim_dataset
csv1 |> glimpse()
data_paths[1]
csv1
csv1 |> glimpse()
csv1 |> glimpse()
csv1 = open_delim_dataset(
sources=here(data_paths[2]),
delim = ";",
convert_options = csv_convert_options(decimal_point=",")
)
csv1 |> glimpse()
csv1 = open_delim_dataset(
sources=here(data_paths[1]),
delim = ";",
convert_options = csv_convert_options(decimal_point=",")
)
csv1 |> glimpse()
csv1 = open_delim_dataset(
sources=here(data_paths[2]),
delim = ";",
convert_options = csv_convert_options(decimal_point=",")
)
csv1 |> glimpse()
walk2(data_paths[2:9],file_names,\(pts,nms)
open_delim_dataset(
sources=here(pts),
delim = ";",
convert_options = csv_convert_options(decimal_point=","))|>
group_by(across(1)) |>
write_dataset(
paste0(here("data/raw/"),nms),
format = "parquet")
)
walk2(data_paths[2:9],file_names[2:9],\(pts,nms)
open_delim_dataset(
sources=here(pts),
delim = ";",
convert_options = csv_convert_options(decimal_point=","))|>
group_by(across(1)) |>
write_dataset(
paste0(here("data/raw/"),nms),
format = "parquet")
)
file_names
walk2(data_paths[2:9],file_names[2:9],\(pts,nms)
open_delim_dataset(
sources=here(pts),
delim = ";",
convert_options = csv_convert_options(decimal_point=","))|>
group_by(across(1)) |>
write_dataset(
here(paste0("data/raw/",nms)),
format = "parquet")
)
walk2(data_paths,file_names,\(pts,nms)
open_delim_dataset(
sources=here(pts),
delim = ";",
convert_options = csv_convert_options(decimal_point=","))|>
group_by(across(1)) |>
write_dataset(
here(paste0("data/raw/",nms)),
format = "parquet")
)
schema(csv1)
csv1 = open_delim_dataset(
sources=here(data_paths[1]),
delim = ";",
convert_options = csv_convert_options(decimal_point=",")
)
schema(csv1)
sch = schema(csv1)
scg$fields
scg$field
sch$fields
walk2(data_paths,file_names,\(pts,nms)
open_delim_dataset(
sources=here(pts),
delim = ";",
convert_options = csv_convert_options(decimal_point=","))|>
group_by(across(1)) |>
write_dataset(
here(paste0("data/raw/",nms)),
format = "parquet")
)
sch$fields[287]
sch$fields[280:290]
